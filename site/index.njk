<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ACNH Villager Birthdays</title>
</head>
<style>
.calendar {
  position: sticky;
  top: 0;
  background: white;
}
.calendar p {
  margin: 0;
}
.villager {
  display: inline-block;
  width: 150px;
  padding-bottom: 16px;
}
.villager img {
  max-width: 70px;
  max-height: 70px;
}
.selected {
  background-color: #bcbcbc;
}
body {
  margin: auto;
  max-width: 800px;
  border-radius: 5px;
  background-color: white;
  /* System Fonts as used by GitHub */
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol";
}
html {
  background-color: #fadbff;
}
.intro {
  text-align: center;
}
.intro ol {
  display: inline-block;
  text-align: left;
}
.hidden {
  display: none;
}
.link {
  text-align: center;
  font-size: 2em;
  font-weight: bold;
}
header {
  display: flex;
  align-items: center;
}
header h1 {
  flex: 1 0 auto;
  font-size: 1.8em;
}
header span {
  font-size: 3em;
}
@media(max-width: 500px) {
  header h1 {
    font-size: 1.3em;
  }
  header span {
    font-size: 1.7em;
  }
}
.copy {
  cursor: pointer;
}
.villager .name {
  font-weight: bold;
}
.villager .birthdate {
  color: #444;
}
</style>
  
<body>

<div class="intro">
<header>
  <h1>Villager Friendship Calculator</h1>
</header>
<ol>
<li>Find your villagers</li>
<li>Tap each one</li>
</ol>

</div>
<div>
<p class="score">
  
</p>
</div>
{% for val in villagers %}
<div class="villager" data-name="{{val.name['name-en'].toLowerCase()}}:{{val['personality'].toLowerCase()}}">
  <img alt="{{val.name['name-en']}}" loading="lazy" src="https://acnhapi.com/images/villagers/{{val['file-name']}}" width="200" height="200">
  <div class="name">{{val.name['name-en']}}</span> <span class="birthdate">- {{val['personality']}}</div>
</div>
{% endfor %}

<footer>
  <p>Built with <a href="https://acnhapi.com/">ACNH API</a></p>
</footer>


<script>
let names = [];
const closest = (el, className) => {
  if (el.classList.contains(className)) {
    return el;
  }
  return closest(el.parentElement, className);
}
document.querySelectorAll('.villager').forEach(v => {
  v.addEventListener('click', e => {
    const el = closest(e.target, 'villager');
    const name = el.dataset.name;
    updateVillager(name);
    el.classList.toggle('selected');
    renderImg();
  });
})
const updateVillager = name => {
  if (names.includes(name)) {
    names = names.filter(n => n !== name);
  } else {
    names = [...names, name];
  }
}

const personalitiesMap = new Map();
personalitiesMap.set('cranky-cranky',5)
personalitiesMap.set('cranky-jock',-3)
personalitiesMap.set('cranky-lazy',5)
personalitiesMap.set('cranky-smug',-5)
personalitiesMap.set('cranky-normal',3)
personalitiesMap.set('cranky-peppy',-3)
personalitiesMap.set('cranky-snooty',-5)
personalitiesMap.set('cranky-uchi',-4)
personalitiesMap.set('jock-jock',0)
personalitiesMap.set('jock-lazy',-5)
personalitiesMap.set('jock-smug',3)
personalitiesMap.set('jock-normal',0)
personalitiesMap.set('jock-peppy',3)
personalitiesMap.set('jock-snooty',-5)
personalitiesMap.set('jock-uchi',3)
personalitiesMap.set('lazy-lazy',5)
personalitiesMap.set('lazy-smug',3)
personalitiesMap.set('lazy-normal',-1)
personalitiesMap.set('lazy-peppy',5)
personalitiesMap.set('lazy-snooty',-5)
personalitiesMap.set('lazy-uchi',0)
personalitiesMap.set('smug-smug',4)
personalitiesMap.set('smug-normal',0)
personalitiesMap.set('smug-peppy',4)
personalitiesMap.set('smug-snooty',5)
personalitiesMap.set('smug-uchi',0)
personalitiesMap.set('normal-normal',0)
personalitiesMap.set('normal-peppy',5)
personalitiesMap.set('normal-snooty',0)
personalitiesMap.set('normal-uchi',5)
personalitiesMap.set('peppy-peppy',0)
personalitiesMap.set('peppy-snooty',0)
personalitiesMap.set('peppy-uchi',5)
personalitiesMap.set('snooty-snooty',5)
personalitiesMap.set('snooty-uchi',3)
personalitiesMap.set('uchi-uchi',0)



const renderImg = () => {
  const personalities = names.map((nameAndPers) => nameAndPers.split(':')[1]);
  let score = 0;
  if(personalities.length > 1){
    for(let i = 0; i < personalities.length - 1; i++){
      console.log(personalities[i]);
      if(personalitiesMap.has(personalities[i] + '-' + personalities[i+1])){
        score += personalitiesMap.get(personalities[i] + '-' + personalities[i+1])
      } else {
        score += personalitiesMap.get(personalities[i+1] + '-' + personalities[i])
      }
      console.log(score);
    }
  }

  document.querySelector('.score').innerHTML = score;
}
</script>
</body>

</html>